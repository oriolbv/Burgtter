angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope",function(t){t.$on("login",function(n,o){t.currentUser=o,console.log("appCtrl :"+t.currentUser)})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,n){t.login=function(o,e){n.login(o,e).then(function(n){t.$emit("login",n.data)})}}]),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(n){return t.post("/api/posts",n)}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(t,n){t.addPost=function(){t.postBody&&n.create({username:"dickeyxxx",body:t.postBody}).success(function(n){t.posts.unshift(n),t.postBody=null})},n.fetch().success(function(n){t.posts=n})}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var n=this;n.getUser=function(){return t.get("/api/users",{headers:{"X-Auth":this.token}})},n.login=function(o,e){return t.post("/api/sessions",{username:o,password:e}).then(function(t){return n.token=t.data,n.getUser()})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJsb2dpbi5jdHJsLmpzIiwicG9zdC5zdmMuanMiLCJwb3N0cy5jdHJsLmpzIiwicm91dGVzLmpzIiwidXNlci5zdmMuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCIkb24iLCJfIiwidXNlciIsImN1cnJlbnRVc2VyIiwiY29uc29sZSIsImxvZyIsIlVzZXJTdmMiLCJsb2dpbiIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJ0aGVuIiwicmVzcG9uc2UiLCIkZW1pdCIsImRhdGEiLCJzZXJ2aWNlIiwiJGh0dHAiLCJ0aGlzIiwiZmV0Y2giLCJnZXQiLCJjcmVhdGUiLCJwb3N0IiwiUG9zdHNTdmMiLCJhZGRQb3N0IiwicG9zdEJvZHkiLCJib2R5Iiwic3VjY2VzcyIsInBvc3RzIiwidW5zaGlmdCIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwic3ZjIiwiZ2V0VXNlciIsImhlYWRlcnMiLCJYLUF1dGgiLCJ0b2tlbiIsInZhbCJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQUFDLE9BQUEsT0FDQSxZQ0RBRCxRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsbUJBQUEsU0FBQSxTQUFBQyxHQUNBQSxFQUFBQyxJQUFBLFFBQUEsU0FBQUMsRUFBQUMsR0FDQUgsRUFBQUksWUFBQUQsRUFDQUUsUUFBQUMsSUFBQSxZQUFBTixFQUFBSSxrQkNKQVAsUUFBQUMsT0FBQSxPQUNBQyxXQUFBLGFBQUEsU0FBQSxVQUFBLFNBQUFDLEVBQUFPLEdBQ0FQLEVBQUFRLE1BQUEsU0FBQUMsRUFBQUMsR0FDQUgsRUFBQUMsTUFBQUMsRUFBQUMsR0FDQUMsS0FBQSxTQUFBQyxHQUNBWixFQUFBYSxNQUFBLFFBQUFELEVBQUFFLFlDTEFqQixRQUFBQyxPQUFBLE9BQ0FpQixRQUFBLFlBQUEsUUFBQSxTQUFBQyxHQUNBQyxLQUFBQyxNQUFBLFdBQ0EsTUFBQUYsR0FBQUcsSUFBQSxlQUVBRixLQUFBRyxPQUFBLFNBQUFDLEdBQ0EsTUFBQUwsR0FBQUssS0FBQSxhQUFBQSxPQ05BeEIsUUFBQUMsT0FBQSxPQUNBQyxXQUFBLGFBQUEsU0FBQSxXQUFBLFNBQUFDLEVBQUFzQixHQUNBdEIsRUFBQXVCLFFBQUEsV0FDQXZCLEVBQUF3QixVQUNBRixFQUFBRixRQUNBWCxTQUFBLFlBQ0FnQixLQUFBekIsRUFBQXdCLFdBQ0FFLFFBQUEsU0FBQUwsR0FDQXJCLEVBQUEyQixNQUFBQyxRQUFBUCxHQUNBckIsRUFBQXdCLFNBQUEsUUFLQUYsRUFBQUosUUFBQVEsUUFBQSxTQUFBQyxHQUNBM0IsRUFBQTJCLE1BQUFBLE9DZkE5QixRQUFBQyxPQUFBLE9BQ0ErQixRQUFBLGlCQUFBLFNBQUFDLEdBQ0FBLEVBQ0FDLEtBQUEsS0FBQWhDLFdBQUEsWUFBQWlDLFlBQUEsZUFDQUQsS0FBQSxhQUFBaEMsV0FBQSxlQUFBaUMsWUFBQSxrQkFDQUQsS0FBQSxVQUFBaEMsV0FBQSxZQUFBaUMsWUFBQSxrQkNMQW5DLFFBQUFDLE9BQUEsT0FDQWlCLFFBQUEsV0FBQSxRQUFBLFNBQUFDLEdBQ0EsR0FBQWlCLEdBQUFoQixJQUNBZ0IsR0FBQUMsUUFBQSxXQUNBLE1BQUFsQixHQUFBRyxJQUFBLGNBQ0FnQixTQUFBQyxTQUFBbkIsS0FBQW9CLFVBR0FKLEVBQUF6QixNQUFBLFNBQUFDLEVBQUFDLEdBQ0EsTUFBQU0sR0FBQUssS0FBQSxpQkFDQVosU0FBQUEsRUFBQUMsU0FBQUEsSUFDQUMsS0FBQSxTQUFBMkIsR0FFQSxNQURBTCxHQUFBSSxNQUFBQyxFQUFBeEIsS0FDQW1CLEVBQUFDIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdhcHAnLCBbXHJcbiAgJ25nUm91dGUnXHJcbl0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbi5jb250cm9sbGVyKCdBcHBsaWNhdGlvbkN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlKSB7XHJcbsKgwqAgICRzY29wZS4kb24oJ2xvZ2luJywgZnVuY3Rpb24gKF8sIHVzZXIpIHtcclxuwqDCoMKgwqAgICAgJHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlclxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdhcHBDdHJsIDonICsgJHNjb3BlLmN1cnJlbnRVc2VyKVxyXG4gICAgfSlcclxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLmNvbnRyb2xsZXIoJ0xvZ2luQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIFVzZXJTdmMpIHtcclxuwqDCoCAgJHNjb3BlLmxvZ2luID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xyXG7CoMKgwqDCoCAgICBVc2VyU3ZjLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZClcclxuwqDCoMKgwqAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbsKgwqDCoMKgwqDCoCAgICAgICRzY29wZS4kZW1pdCgnbG9naW4nLCByZXNwb25zZS5kYXRhKVxyXG7CoMKgwqDCoCAgICB9KVxyXG7CoMKgICB9XHJcbn0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbi5zZXJ2aWNlKCdQb3N0c1N2YycsIGZ1bmN0aW9uICgkaHR0cCkge1xyXG4gICAgdGhpcy5mZXRjaCA9IGZ1bmN0aW9uICgpIHtcclxuwqDCoMKgwqAgICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9wb3N0cycpXHJcbsKgwqAgIH1cclxuwqDCoCAgdGhpcy5jcmVhdGUgPSBmdW5jdGlvbiAocG9zdCkge1xyXG7CoMKgwqDCoCAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9wb3N0cycsIHBvc3QpXHJcbsKgwqAgIH1cclxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLmNvbnRyb2xsZXIoJ1Bvc3RzQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIFBvc3RzU3ZjKSB7XHJcbsKgwqAgICRzY29wZS5hZGRQb3N0ID0gZnVuY3Rpb24gKCkge1xyXG7CoMKgwqDCoCAgICBpZiAoJHNjb3BlLnBvc3RCb2R5KSB7XHJcbsKgwqDCoMKgwqDCoCAgICAgIFBvc3RzU3ZjLmNyZWF0ZSh7XHJcbiAgICDCoMKgwqDCoMKgwqDCoMKgICAgIHVzZXJuYW1lOiAnZGlja2V5eHh4JyxcclxuICAgIMKgwqDCoMKgwqDCoMKgwqAgICAgYm9keTogJHNjb3BlLnBvc3RCb2R5XHJcbiAgICDCoMKgwqDCoMKgwqAgIH0pLnN1Y2Nlc3MoZnVuY3Rpb24gKHBvc3QpIHtcclxuICAgIMKgwqDCoMKgwqDCoMKgwqAgICAgJHNjb3BlLnBvc3RzLnVuc2hpZnQocG9zdClcclxuICAgIMKgwqDCoMKgwqDCoMKgwqAgICAgJHNjb3BlLnBvc3RCb2R5ID0gbnVsbFxyXG4gICAgwqDCoMKgwqDCoCAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIFBvc3RzU3ZjLmZldGNoKCkuc3VjY2VzcyhmdW5jdGlvbiAocG9zdHMpIHtcclxuICAgICAgICAkc2NvcGUucG9zdHMgPSBwb3N0c1xyXG4gICAgfSlcclxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLmNvbmZpZyhmdW5jdGlvbiAoJHJvdXRlUHJvdmlkZXIpIHtcclxuICAgICRyb3V0ZVByb3ZpZGVyXHJcbsKgwqAgIC53aGVuKCcvJywgeyBjb250cm9sbGVyOiAnUG9zdHNDdHJsJywgdGVtcGxhdGVVcmw6ICdwb3N0cy5odG1sJyB9KVxyXG7CoMKgICAud2hlbignL3JlZ2lzdGVyJywgeyBjb250cm9sbGVyOiAnUmVnaXN0ZXJDdHJsJywgdGVtcGxhdGVVcmw6ICdyZWdpc3Rlci5odG1sJyB9KVxyXG7CoMKgICAud2hlbignL2xvZ2luJywgeyBjb250cm9sbGVyOiAnTG9naW5DdHJsJywgdGVtcGxhdGVVcmw6ICdsb2dpbi5odG1sJyB9KVxyXG59KSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uc2VydmljZSgnVXNlclN2YycsIGZ1bmN0aW9uICgkaHR0cCkge1xyXG7CoMKgICB2YXIgc3ZjID0gdGhpc1xyXG7CoMKgICBzdmMuZ2V0VXNlciA9IGZ1bmN0aW9uICgpIHtcclxuwqDCoMKgwqAgICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS91c2VycycsIHtcclxuwqDCoMKgwqDCoMKgICAgICAgaGVhZGVyczogeyAnWC1BdXRoJzogdGhpcy50b2tlbiB9XHJcbsKgwqDCoMKgICAgIH0pXHJcbsKgwqAgIH1cclxuwqDCoCAgc3ZjLmxvZ2luID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xyXG7CoMKgwqDCoCAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9zZXNzaW9ucycsIHtcclxuwqDCoMKgwqDCoMKgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLCBwYXNzd29yZDogcGFzc3dvcmRcclxuwqDCoMKgwqAgICAgfSkudGhlbihmdW5jdGlvbiAodmFsKSB7XHJcbsKgwqDCoMKgwqDCoCAgICAgIHN2Yy50b2tlbiA9IHZhbC5kYXRhXHJcbsKgwqDCoMKgwqDCoCAgICAgIHJldHVybiBzdmMuZ2V0VXNlcigpXHJcbsKgwqDCoMKgICAgIH0pXHJcbsKgwqAgIH1cclxufSkiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
